//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;

namespace TTC2021.LabWorkflows.LaboratoryAutomation
{
    
    
    /// <summary>
    /// The public interface for ProtocolStep
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(ProtocolStep))]
    [XmlDefaultImplementationTypeAttribute(typeof(ProtocolStep))]
    [ModelRepresentationClassAttribute("http://www.transformation-tool-contest.eu/ttc21/laboratoryAutomation#//ProtocolSt" +
        "ep")]
    public partial interface IProtocolStep : IModelElement
    {
        
        /// <summary>
        /// The id property
        /// </summary>
        [DisplayNameAttribute("id")]
        [CategoryAttribute("ProtocolStep")]
        [XmlElementNameAttribute("id")]
        [XmlAttributeAttribute(true)]
        string Id
        {
            get;
            set;
        }
        
        /// <summary>
        /// The next property
        /// </summary>
        [DisplayNameAttribute("next")]
        [CategoryAttribute("ProtocolStep")]
        [XmlElementNameAttribute("next")]
        [XmlAttributeAttribute(true)]
        [XmlOppositeAttribute("previous")]
        IProtocolStep Next
        {
            get;
            set;
        }
        
        /// <summary>
        /// The previous property
        /// </summary>
        [DisplayNameAttribute("previous")]
        [CategoryAttribute("ProtocolStep")]
        [XmlElementNameAttribute("previous")]
        [XmlAttributeAttribute(true)]
        [XmlOppositeAttribute("next")]
        IProtocolStep Previous
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the Id property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> IdChanging;
        
        /// <summary>
        /// Gets fired when the Id property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> IdChanged;
        
        /// <summary>
        /// Gets fired before the Next property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> NextChanging;
        
        /// <summary>
        /// Gets fired when the Next property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> NextChanged;
        
        /// <summary>
        /// Gets fired before the Previous property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PreviousChanging;
        
        /// <summary>
        /// Gets fired when the Previous property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PreviousChanged;
    }
}

